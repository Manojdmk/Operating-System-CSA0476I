#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>

sem_t mutex, wrt;
int data = 0, readersCount = 0;

void *reader(void *arg) {
    sem_wait(&mutex);
    readersCount++;
    if (readersCount == 1) {
        sem_wait(&wrt);
    }
    sem_post(&mutex);
    printf("Reader reads data: %d\n", data);
    sem_wait(&mutex);
    readersCount--;
    if (readersCount == 0) {
        sem_post(&wrt);
    }
    sem_post(&mutex);
}

void *writer(void *arg) {
    sem_wait(&wrt);
    data++;
    printf("Writer writes data: %d\n", data);
    sem_post(&wrt);
}

int main() {
    pthread_t readers[5], writers[5];
    int i;

    sem_init(&mutex, 0, 1);
    sem_init(&wrt, 0, 1);

    for (i = 0; i < 5; i++) {
        pthread_create(&readers[i], NULL, reader, NULL);
        pthread_create(&writers[i], NULL, writer, NULL);
    }

    for (i = 0; i < 5; i++) {
        pthread_join(readers[i], NULL);
        pthread_join(writers[i], NULL);
    }

    sem_destroy(&mutex);
    sem_destroy(&wrt);

    return 0;
}
